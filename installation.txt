---------------------------------------------------------------------
Contents
---------------------------------------------------------------------
	About

	Copyright

	Requirements

	Installation

---------------------------------------------------------------------
About
---------------------------------------------------------------------
	This is the content manager we use for the city of Bloomington's
website.

---------------------------------------------------------------------
Copyright
---------------------------------------------------------------------
	This content manager is written and copyrighted by the
City of Bloomington, IN.  It is being released as free software;
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation;
either version 2 of the License, or (at your option) any later version.

See: LICENSE.txt


---------------------------------------------------------------------
Requirements
---------------------------------------------------------------------
Framework:
This scaffolding requires our Framework to be on the server somewhere.
Our Framework is available as a seperate release.  In the configuration,
you will need to point this scaffolding to the directory where the
Framework is installed.

This application was written assuming you have control over your own web
server.  If you are on a hosted system, you may need to make changes to
the code to accomodate your server.

All include files have been kept out of the web directory, and a configuration
file has been included. You will need to make sure that every .php script
in the HTML directory includes configuration.inc.  If you control your own
webserver, you can add a <Directory> command to your httpd.conf.

PHP:
PHP must be compiled with support for:
	PDO
	MySQL
	LDAP

	Actually, you can substitute any database support for MySQL, as our
framework uses PDO for database interaction.

MySQL:
	MySQL should have support for InnoDB.  Foreign keys are written into
the database load scripts.  While MyISAM tables will just ignore them,
you database and your application will be that much more robust with InnoDB
support.

LDAP:
	LDAP is only used for doing LDAP authentication for users.
If you're not going to do any LDAP authentication, you can delete or
comment out the LDAP stuff.

Subversion:
	Content is versioned using subversion.  You will need subversion
installed on your webserver, so that PHP can call the svn commands
to keep track of the documents.
	The repository does not have to be located on the webserver,
however, in our case, we just create the repository inside the
web application directory once it's installed.

---------------------------------------------------------------------
Installation
---------------------------------------------------------------------
	Put the web application somewhere accessible by Apache.

	All of the application's settings are set in configuration.inc.
The best way is to have PHP auto_prepend the configuration.inc.
If this is the only web application on your apache server, you can just point
your apache's web directory to the html directory inside the application and
edit the auto_prepend in your php.ini file.

	For us, we're running multiple applications, and have a seperate entry in
our Apache config for each one.  This does essentially the same thing.

Add to httpd.conf:

Alias /application_name "/path/to/application_name/html"
<Directory "/path/to/application_name/html">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all

        php_value auto_prepend_file /path/to/application_name/configuration.inc
</Directory>


	If you're running in a shared hosting environment, you cannot do Alias or
Directory commands.  However the html can be moved into your web directory.
To make sure the configuration file gets loaded, create an htaccess file in
this application's html directory with the php_value line from above.

	If you cannot edit your httpd.conf or use htaccess files, you will need to
add an include() command to the top of every last PHP script in the html directory.

---------------------------------------------------------------------
Configuration
---------------------------------------------------------------------
	Edit configuration.inc with appropriate values for your installation.


---------------------------------------------------------------------
Prepare Non-Database Data
---------------------------------------------------------------------
Subversion :
	This application uses subversion to track changes to the documents.
You will need to set up a repository that PHP can checkout and commit to.
Typically you just create the repository in the application's data
directory once it's installed.

1) Create the document_repository
cd /path/to/application_name/data
svnadmin create repository

2) Import the default homepage into the document_repository
cd documents
svn import file:///path/to/application_name/data/document_repository -m 'Initial repository population.'

3) Check the default documents out of the repository
cd ..
rm -Rf documents
svn checkout file:///var/www/sites/content_manager/data/document_repository documents



