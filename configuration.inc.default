<?php
define('COPYRIGHT',"/**
 * @copyright 2006-2009 City of Bloomington, Indiana
 * @license http://www.gnu.org/licenses/agpl.txt GNU/AGPL, see LICENSE.txt
 */");

/**
 * Used to keep sessions on the same webserver seperate;
 */
define('APPLICATION_NAME','application_name');

/**
 * Set the base url to be output across all code for the site.
 * Do NOT use a trailing slash
 * output https:// urls when the site is accessed through https
 */
$protocol = (!defined('STDIN') && $_SERVER['SERVER_PORT']==443) ? 'https' : 'http';
define('BASE_URL',"$protocol://localhost");

/**
 * Where on the filesystem this application is installed
 */
define('APPLICATION_HOME','/var/www/sites/application_name');

/**
 * Where on the filesystem the framework is installed.
 */
define('FRAMEWORK',APPLICATION_HOME.'/libraries/framework');

/**
 * This needs to point to the library directory inside your
 * installation of the ZendFramework
 * http://framework.zend.com
 */
define('ZEND','/var/www/libraries/ZendFramework/library');

/**
 * iCal library used for calendars and events
 */
define('ICAL4PHP',APPLICATION_HOME.'/libraries/iCal4PHP');

/**
 * Optional Content cleaning - Comment this out if your don't want
 * extra cleaning to be done on content submitted from the WYSIWYG editor
 *
 * http://htmlpurifier.org
 *
 * Content Manager reads the HTMLPurifier_Config.inc file
 */
define('HTMLPURIFIER','/var/www/libraries/htmlpurifier/library');

/**
 * Optional Content Cleaning - Comment this out if you don't want
 * content submitted from the WYSIWYG editor to be cleaned by Tidy
 * This should point to a Tidy config file
 */
define('TIDY_CONFIG',APPLICATION_HOME.'/tidy_config.txt');

/**
 * Used when there's an error on the site.  The Framework will
 * print out a nice error message, encouraging users to report any problems
 * See: FRAMEWORK/ITSFunctions.inc
 */
define('ADMINISTRATOR_NAME','Site Admin');
define('ADMINISTRATOR_EMAIL','admin@servername.com');

/**
 * Set how we want to handle errors
 * PHP_DEFAULT - do whatever's configured in php.ini
 *
 * If you do not define error handling to PHP_DEFAULT
 * the custom error handlers kick in.  All of the custom error display
 * frunctions are in FRAMEWORK/globalFunctions.inc.  The custom error
 * function decide what to do based on $ERROR_REPORING array values
 *
 * PRETTY_PRINT - Display a message in the browser
 * EMAIL_ADMIN - email the Administrator
 * EMAIL_USER - email the logged in user
 * SKIDDER - post errors to a Skidder server (see config below)
*/
define('ERROR_REPORTING','PHP_DEFAULT');
//define('ERROR_REPORTING','CUSTOM');
//$ERROR_REPORTING = array('PRETTY_PRINT','SKIDDER');
/**
 * Skidder is a web service for error notifications.  Error reporting supports
 * posting errors to a Skidder server.  You must register for an application_id
 * on the skidder server you want to post errors to.
 */
//define('SKIDDER_URL','http://localhost/skidder/home.php');
//define('SKIDDER_APPLICATION_ID',);

/**
 * Database Setup
 * Refer to the PDO documentation for DSN sytnax
 * for your database type
 * http://www.php.net/manual/en/pdo.drivers.php
 */
define('DB_TYPE','mysql');
define('DB_DSN','host=localhost;'); // You must include the trailing semi-colon
define('DB_NAME',APPLICATION_NAME);
define('DB_USER',APPLICATION_NAME);
define('DB_PASS','password');

/**
 * This application calls mysql and mysqldump from the command line through
 * exec() and needs the path to the binaries
 */
define('MYSQL_PATH','/usr/local/mysql');

/**
 * Directory Configuration
 *
 * This is required in order to use the LDAP or ADS authentication
 * If you do not want to use external authentication, you can comment this out
 */
// Example for ADS style authentication
define('DIRECTORY_SERVER','ldaps://example.org:636');
define('DIRECTORY_BASE_DN','OU=Department,DC=example,DC=org');
define('DIRECTORY_USERNAME_ATTRIBUTE', 'CN');
define('DIRECTORY_USER_BINDING','{username}@bloomington.in.gov');
define('DIRECTORY_ADMIN_BINDING', 'admin@bloomington.in.gov');
define('DIRECTORY_ADMIN_PASS','password');
// Example for LDAP style authentication
//define('DIRECTORY_SERVER','ldaps://example.org:636');
//define('DIRECTORY_BASE_DN','ou=people,o=ldap.domain.somewhere');
//define('DIRECTORY_USERNAME_ATTRIBUTE', 'uid');
//define('DIRECTORY_USER_BINDING','uid={username},'.DIRECTORY_BASE_DN);
//define('DIRECTORY_ADMIN_BINDING', 'uid=admin,'.DIRECTORY_BASE_DN);
//define('DIRECTORY_ADMIN_PASS','password');

/**
 * These control search index performance.  If indexing seems slow
 * or PHP runs out of memory, you might try adjusting these to suit
 * Documentation is available at:
 * http://framework.zend.com/manual/en/zend.search.lucene.best-practice.html
 */
define('ZEND_SEARCH_MAX_BUFFERED_DOCS',5);
define('ZEND_SEARCH_MAX_MERGE_DOCS',10000);
define('ZEND_SEARCH_MERGE_FACTOR',10);

/**
 * Zend Search is very memory Intensive
 * You can adjust how much memory you want to allow for search code
 * PHP's default limit is only 16M
 */
define('SEARCH_MEMORY_LIMIT','128M');

/**
 * WYSIWYG Editor
 * Uncomment one of the following
 */
//define('EDITOR','FCKeditor');
define('EDITOR','tiny_mce');

/**
 * Image handling library
 * Set the path to the ImageMagick binaries
 */
define('IMAGEMAGICK','/usr/bin');

/**
 * The system also runs command line PHP scripts.
 * It needs to know where PHP-CLI is installed
 */
define('PHP','/usr/local/php/bin/php');

/**
 * Import global functions that we use for many applications we write
 */
include FRAMEWORK.'/globalFunctions.php';

/**
 * Session Startup
 * Don't start a session for CLI usage.
 * We only want sessions when PHP code is executed from the webserver
 */
if (!defined('STDIN')) {
	ini_set('session.save_path',APPLICATION_HOME.'/data/sessions');
	ini_set('session.gc_maxlifetime',30*60);
	session_start();
}

/**
 * We now do single sign-on using CAS  http://www.jasig.org/cas
 *
 * http://code.google.com/p/simplecas/
 *
 * SimpleCAS is a PHP library for handling the calls to the CAS service
 * The version we're running right now has been modified to remove
 * the depency on HTTP_Request2.  Instead, it uses curl
 */
define('CAS','/var/www/libraries/SimpleCAS');
define('CAS_SERVER','cas.somewhere.org');
define('CAS_URI','cas');

/**
 * Language Negotiation
 * Order of precedence: GET,SESSION, HTTP_ACCEPT_LANGUAGE, en
 *
 * By Default, a chosen language will be stored in the SESSION.  If you
 * only want translations to be available only per request, you will
 * need to comment out the second if () and uncomment the else
 * This will make it so subsequent pages will continue to be served
 * in the default language
 */
define('DEFAULT_LANGUAGE','en');
if (isset($_GET['lang'])) {
	$lang = preg_replace('/[^a-z]/','',strtolower(substr($_GET['lang'],0,3)));
	try {
		$lang = new Language($lang);
		$_SESSION['LANGUAGE'] = $lang->getCode();
	}
	catch (Exception $e) {
		$_SESSION['LANGUAGE'] = DEFAULT_LANGUAGE;
	}
}
// Replace this if () line with an else, if you do not want languages to stick in the SESSION
//else {
if (!isset($_SESSION['LANGUAGE'])) {
	if (isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
		$lang = preg_replace('/[^a-z]/','',strtolower(substr($_SERVER['HTTP_ACCEPT_LANGUAGE'],0,3)));
		try {
			$lang = new Language($lang);
			$_SESSION['LANGUAGE'] = $lang->getCode();
		}
		catch (Exception $e) {
			$_SESSION['LANGUAGE'] = DEFAULT_LANGUAGE;
		}
	}
	else {
		$_SESSION['LANGUAGE'] = DEFAULT_LANGUAGE;
	}
}

/**
 * Mobile Site redirection
 */
if (isset($_SERVER['HTTP_USER_AGENT'])
	&& preg_match('/android|iphone|ipad|ipod|blackberry|symbian|palm|ericsson/',
					strtolower($_SERVER['HTTP_USER_AGENT']))) {
	if (false !== strpos($_SERVER['HTTP_REFERER'],'http://bloomington.in.gov/m')) {
		$_SESSION['really_want_to_view_full_site'] = true;
	}
	if (!isset($_SESSION['really_want_to_view_full_site'])) {
		header('Location: http://bloomington.in.gov/m');
	}
}


/**
 * Skin Negotiation
 * Set the name for the skin directory you want to use.
 * Skins are stored in APPLICATION_HOME/html/skins
 * Documents can now override this skin, if they need to.
 */
define('DEFAULT_SKIN','default');

/**
 * External Web Services
 */
define('DIRECTORY_WEBSERVICE','http://isotope.bloomington.in.gov/directory');
define('CIVIC_CRM','https://localhost/civic-crm');
define('CIVIC_CRM_API_KEY','');

/**
 * Emergency Weather Alerts
 * Point this to a CAP.xml source for your area
 * More information about this system is at http://www.weather.gov/alerts
 * The National Weather Service publishes these cap files for each State
 */
define('NATIONAL_WEATHER_SERVICE_FEED','http://www.weather.gov/alerts/in.cap');
/**
 * The National Weather service is publishing alerts even for mundane things
 * like the short term forcast.  If there are alert info events in the CAP
 * file that you want to ignore, add a regular expression for them in this array
 */
$ALERT_IGNORE = array(
	'/Forecast/'
);

/**
 * Google API Key
 * The content manager uses the Google API for Google Maps, and for YouTube.
 * If you want this functionality, you must provide your own Google API Key
 * Google issues these on a per-server basis
 */
//define('GOOGLE_API_KEY','');

/**
 * Bad URL Definitions
 * Regular expressions defining what bad links would look like
 * URLs that match these regular expressions will be treated as bad
 * links by the WikiMarkup parser
 * Each of these must be a regular expression in Perl syntax
 */
$BAD_LINK_EXPRESSIONS = array(
//	'|http://bloomington|',
//	'|http://www\.bloomington\.|'
);
