<?php
// Call WeekDayTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'WeekDayTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'../../../WeekDay.inc';

/**
 * Test class for WeekDay.
 * Generated by PHPUnit on 2007-10-25 at 13:11:14.
 */
class WeekDayTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('WeekDayTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    public function testParsing() {
    	$weekday = new WeekDay('-1SU');
    	$this->assertTrue($weekday->getOffset()==-1,'Negative offset not parsed');
    	$this->assertTrue($weekday->getDay()=='SU','Day not parsed with negative offset');

    	$weekday = new WeekDay('+2SU');
    	$this->assertTrue($weekday->getOffset()==2,'Positive offset not parsed');
    	$this->assertTrue($weekday->getDay()=='SU','Day not parsed with positive offset');

    	$weekday = new WeekDay('2SU');
    	$this->assertTrue($weekday->getOffset()==2,'Positive offset not parsed');
    	$this->assertTrue($weekday->getDay()=='SU','Day not parsed with positive offset');

    	$weekday = new WeekDay('SU');
    	$this->assertTrue($weekday->getOffset()==0,'Undefined offset not parsed');
    	$this->assertTrue($weekday->getDay()=='SU','Day not parsed without offset');
    }

    public function testGetDayName()
    {
    	$weekday = new WeekDay('TU');
    	$this->assertEquals($weekday->getDayName(),'Tuesday');
    }

    /**
     * @todo Implement test__toString().
     */
    public function test__toString() {
    	$weekday = new WeekDay('-1SU');
    	$this->assertTrue($weekday=='-1SU','Negative offset not serialized correctly');

    	$weekday = new WeekDay('2SU');
    	$this->assertTrue($weekday=='2SU','Positive offset not serialized correctly');

    	$weekday = new WeekDay('SU');
    	$this->assertTrue($weekday=='SU','Undefined offset not serialized correctly');
    }

}

// Call WeekDayTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'WeekDayTest::main') {
    WeekDayTest::main();
}
?>
