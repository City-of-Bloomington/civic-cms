<?php
// Call EventRecurrenceTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'EventRecurrenceTest::main');
}

require_once 'PHPUnit/Framework.php';

if (!defined('APPLICATION_HOME')) { include dirname(__FILE__).'/../configuration.inc'; }
require_once APPLICATION_HOME.'/classes/EventRecurrence.inc';

/**
 * Test class for EventRecurrence.
 * Generated by PHPUnit on 2007-10-04 at 11:49:06.
 */
class EventRecurrenceTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('EventRecurrenceTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }


    /**
     * @todo Implement testIsEvent().
     */
    public function testIsEvent() {
    	$event = new Event(1);
    	$recur = new EventRecurrence($event,$event->getStart());
    	$recur->setStart($event->getStart());
    	$this->assertEquals($recur->getType(),'Event');
    }

    /**
     * @todo Implement testIsRecurrence().
     */
    public function testIsRecurrence() {
    	$event = new Event(1);
    	$recur = new EventRecurrence($event,$event->getStart());
    	$recur->setStart(time());
    	$this->assertEquals($recur->getType(),'Recurrence');
    }

    public function testGetEvent_id() {
    	$event = new Event(1);
    	$recur = new EventRecurrence($event,$event->getStart());
    	$this->assertEquals($recur->getEvent_id(),1,"Recurrence Event Id:{$recur->getEvent_id()} does not equal 1");
    }


}

// Call EventRecurrenceTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'EventRecurrenceTest::main') {
    EventRecurrenceTest::main();
}
?>
