<?php
// Call LocationGroupTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'LocationGroupTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once APPLICATION_HOME.'/classes/LocationGroup.inc';

/**
 * Test class for LocationGroup.
 * Generated by PHPUnit on 2007-10-04 at 11:49:09.
 */
class LocationGroupTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('LocationGroupTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
		$_SESSION['USER'] = new User(1);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

	/**
	 * Test saving LocationGroups to the database
	 */
    public function testSave() {
		$locationGroup = new LocationGroup();
		$locationGroup->setName('Test Group');
		$locationGroup->save();

		$id = $locationGroup->getId();
		$this->assertTrue($id>0,'Location Group was not inserted');
		unset($locationGroup);

		$locationGroup = new LocationGroup($id);
		$locationGroup->setDescription('This was a changed description');
		$locationGroup->save();

		$this->assertTrue($locationGroup->getDescription()=='This was a changed description','Location Group was not updated correctly');

		$locationGroup->delete();
	}

	public function testDelete() {
		$locationGroup = new LocationGroup();
		$locationGroup->setName('Test Group');
		$locationGroup->save();
		$id = $locationGroup->getId();

		$locationGroup->delete();

		$list = new LocationGroupList(array('id'=>$id));
		$this->assertTrue(count($list)==0,'Location group was not deleted');
	}


    /**
     * @todo Implement testPermitsEditingBy().
     */
    public function testPermitsEditingBy() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetLocations().
     */
    public function testGetLocations() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement test__toString().
     */
    public function test__toString() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetId().
     */
    public function testGetId() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetName().
     */
    public function testGetName() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDepartment_id().
     */
    public function testGetDepartment_id() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDescription().
     */
    public function testGetDescription() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDepartment().
     */
    public function testGetDepartment() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetName().
     */
    public function testSetName() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetDepartment_id().
     */
    public function testSetDepartment_id() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetDescription().
     */
    public function testSetDescription() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetDepartment().
     */
    public function testSetDepartment() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}

// Call LocationGroupTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'LocationGroupTest::main') {
    LocationGroupTest::main();
}
?>
