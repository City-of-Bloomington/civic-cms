<?php
// Call BackupTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'BackupTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once APPLICATION_HOME.'/classes/Backup.inc';

/**
 * Test class for Backup.
 * Generated by PHPUnit on 2007-10-04 at 11:49:02.
 */
class BackupTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('BackupTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * @todo Implement testSave().
     */
    public function testSave() {
    	$backup = new Backup();
    	try
    	{
			$backup->save();
    	}
    	catch(Exception $e) { $this->fail('Backup threw exception'); }

    	# There should now be a tarball in /backups
    	$filename = date('Y-m-d').'.tar.gz';
    	$this->assertTrue(file_exists(APPLICATION_HOME."/backups/$filename"),'Backup did not create a file');
    }

}

// Call BackupTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'BackupTest::main') {
    BackupTest::main();
}
?>
